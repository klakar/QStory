# This file contains metadata for your plugin.

# This file should be included when you package your plugin.# Mandatory items:

[general]
name=QGIS Story Builder
qgisMinimumVersion=3.0
description=Build a story upon a Web Map
version=0.1
author=Klas Karlsson
email=klas.karlsson@geosupportsystem.se

about=This is a QGIS plugin that adds "story" functionality to web maps from qgis2web (and other similar tools) Idea It is possible to include this functionality into other plug-ins, but after some consideration I desided to start from a Unix filosofy and try and build a tool that does One thing, and does it (reasonably) well. This plug-in is a tool to build the story, not the map. Use any tool you want to build your web map (for now qgis2web is recommended) and then this tool to build the story and "apply" it to the web map. Basic functionality The plugin is pointed to a html-file for the web map. In that it looks for the and tags, where it adds some code. When the story is generated it will save resource files at the web map location, that is called by the code in the html file. The plugin principals The plugin is a simple form to generate the story "pages". It is only the content that is created, the style and apperance in the end result is controled by selecting a "theme". Themes are folders with resource files that can be anything, but at a minimum there should be a "qstory.css" and a "qstory.js" file. The plugin generates a couple of list variables that is used in the qstory.js file to generate the story pages. This generation of the lists is independent of which "theme" that is selected. This means the basic structure is pretty simple and the real power is implemented in the resource files. This also makes it easier to add and modify themes for the plugin in the future. Initially there will be a very limited number of simple themes, and when the basic functionality is setteled you are encouraged to contribute with additional story themes to the project. Goals I will build this plugin first as a protorype, when I have some time over. There's no time goal and progress and end results will depend on the community involvement. The plugin will only be uploaded to the QGIS repository if there's a possitive response from users. Forks If anyone think you can do this better it's quite OK to "steal" the project and use it in other plug-ins (GPL3 license). Just let me know so I can move on to other experiments...

tracker=https://github.com/klakar/QStory/issues
repository=https://github.com/klakar/QStory
# End of mandatory metadata

# Recommended items:

hasProcessingProvider=no
# Uncomment the following line and add your changelog:
# changelog=

# Tags are comma separated with spaces allowed
tags=python

homepage=https://github.com/klakar/QStory
category=Web
icon=icon.png
# experimental flag
experimental=True

# deprecated flag (applies to the whole plugin, not just a single version)
deprecated=False

# Since QGIS 3.8, a comma separated list of plugins to be installed
# (or upgraded) can be specified.
# Check the documentation for more information.
# plugin_dependencies=

Category of the plugin: Raster, Vector, Database or Web
# category=

# If the plugin can run on QGIS Server.
server=False

